import Head from "next/head";
import styles from "@kenk2/styles/Home.module.css";
import { Diagnostic, Intro, Result } from "@kenk2/components";
import { useAnswers, useDomains, useQuestions } from "@kenk2/hooks";
import { DiagnosticResponses, Answer } from "@kenk2/types";
import { useState } from "react";

export default function Home() {
  const { data: questionData, isLoading: isLoadingDiagnostic } = useQuestions();
  const { data: domainData } = useDomains();
  const {
    mutate,
    data: assessmentResult,
    isLoading: isLoadingResults,
  } = useAnswers();

  const [modalOpen, setModalOpen] = useState<boolean>(false);
  const [started, setStarted] = useState<boolean>(false);

  const handleSubmit = async (results: DiagnosticResponses) => {
    const payload: Answer[] = Object.entries(results).map((answer) => ({
      questionId: answer[0],
      value: answer[1],
    }));

    await mutate(payload, {
      onSuccess: () => setModalOpen(true),
    });
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {started && questionData?.data && domainData ? (
          <Diagnostic
            diagnostic={questionData?.data}
            onSubmit={handleSubmit}
            isLoadingResults={isLoadingResults}
          />
        ) : (
          <Intro
            loading={isLoadingDiagnostic}
            onStart={() => setStarted(true)}
            diagnostic={questionData?.data}
          />
        )}
        {domainData && (
          <Result
            open={modalOpen}
            onClose={() => setModalOpen(false)}
            results={assessmentResult?.data}
            domains={domainData}
          />
        )}
      </main>
    </>
  );
}
